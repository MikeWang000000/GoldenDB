#
# Test use sys var "disable_full_table_scan_in_delete" to avoid full table scan in single delete
#

--echo ##
--echo ## prepare
--echo ##
create database delete_disable_full_table_scan_in_delete;
use delete_disable_full_table_scan_in_delete;
create table t1(a int primary key, b int, c int, key b (b), key bc (c,b));
create table t2(a int not null auto_increment, b int unique key, c int, primary key (a), key bc ((b+c)));
insert into t1 values (1,1,1),(2,2,2),(3,3,3),(4,1,3),(5,2,2),(6,3,2);
insert into t2 (b,c) values (2,1),(1,2),(3,3),(5,3),(6,2),(7,2);
analyze table t1;

SET @old_lock_wait_timeout=@@global.lock_wait_timeout;
SET @old_innodb_lock_wait_timeout=@@global.innodb_lock_wait_timeout;
SET @@global.lock_wait_timeout=1;
SET @@global.innodb_lock_wait_timeout=1;
set @old_disable_full_table_scan_in_delete=@@session.disable_full_table_scan_in_delete;

connect (conn1, 127.0.0.1,root,,);
connect (conn2, 127.0.0.1,root,,);

--echo ##
--echo ## Test 1 Use primary key
--echo ##
connection conn1;
use delete_disable_full_table_scan_in_delete;
begin;
select * from t1 where a=4 for update;

connection conn2;
use delete_disable_full_table_scan_in_delete;
set disable_full_table_scan_in_delete = on;
explain delete from t1 where a in (1,2,3,5,6,7,8,9,10,11,12);
set disable_full_table_scan_in_delete = off;
explain delete from t1 where a in (1,2,3,5,6,7,8,9,10,11,12);
begin;
--error ER_LOCK_WAIT_TIMEOUT
delete from t1 where a in (1,2,3,5,6,7,8,9,10,11,12);
set disable_full_table_scan_in_delete = on;
delete from t1 where a in (1,2,3,5,6,7,8,9,10,11,12);
commit;

connection conn1;
commit;
use delete_disable_full_table_scan_in_delete;
insert into t1 values (1,1,1),(2,2,2),(3,3,3),(5,2,2),(6,3,2);

--echo ##
--echo ## Test 2 Use normal key
--echo ##

begin;
select * from t1 where b=2 for update;

connection conn2;
use delete_disable_full_table_scan_in_delete;
set disable_full_table_scan_in_delete = on;
explain delete from t1 where b in (1,3,4,5,6,7,8,9,10,11,12);
set disable_full_table_scan_in_delete = off;
explain delete from t1 where b in (1,3,4,5,6,7,8,9,10,11,12);
begin;
--error ER_LOCK_WAIT_TIMEOUT
delete from t1 where b in (1,3,4,5,6,7,8,9,10,11,12);
set disable_full_table_scan_in_delete = on;
delete from t1 where b in (1,3,4,5,6,7,8,9,10,11,12);
commit;

connection conn1;
commit;
use delete_disable_full_table_scan_in_delete;
insert into t1 values (1,1,1),(3,3,3),(4,1,3),(6,3,2);

--echo ##
--echo ## Test 3 Use composite index
--echo ##

alter table t1 drop index b;
begin;
select * from t1 where b=3 and c=3 for update;

connection conn2;
use delete_disable_full_table_scan_in_delete;
set disable_full_table_scan_in_delete = on;
explain delete from t1 where (b=1 or b=2 or b=6 or b=7 or b=8 or b=9) and (c=1 or c=3 or c=4 or c=5);
set disable_full_table_scan_in_delete = off;
explain delete from t1 where (b=1 or b=2 or b=6 or b=7 or b=8 or b=9) and (c=1 or c=3 or c=4 or c=5);
begin;
--error ER_LOCK_WAIT_TIMEOUT
delete from t1 where (b=1 or b=2 or b=6 or b=7 or b=8 or b=9) and (c=1 or c=3 or c=4 or c=5);
set disable_full_table_scan_in_delete = on;
delete from t1 where (b=1 or b=2 or b=6 or b=7 or b=8 or b=9) and (c=1 or c=3 or c=4 or c=5);
commit;

connection conn1;
commit;
use delete_disable_full_table_scan_in_delete;
insert into t1 values (1,1,1),(4,1,3);

begin;
select * from t1 where c=3 for update;

connection conn2;
use delete_disable_full_table_scan_in_delete;
set disable_full_table_scan_in_delete = on;
explain delete from t1 where c=1 or c=2 or c=4 or c=5 or c=6 or c=7;
set disable_full_table_scan_in_delete = off;
explain delete from t1 where c=1 or c=2 or c=4 or c=5 or c=6 or c=7;
begin;
--error ER_LOCK_WAIT_TIMEOUT
delete from t1 where c=1 or c=2 or c=4 or c=5 or c=6 or c=7;
set disable_full_table_scan_in_delete = on;
delete from t1 where c=1 or c=2 or c=4 or c=5 or c=6 or c=7;
commit;

connection conn1;
commit;
use delete_disable_full_table_scan_in_delete;
insert into t1 values (1,1,1),(2,2,2),(5,2,2),(6,3,2);

--echo ##
--echo ## Test 4 Use auto-increment column
--echo ##
begin;
select * from t2 where a=4 for update;

connection conn2;
use delete_disable_full_table_scan_in_delete;
set disable_full_table_scan_in_delete = on;
explain delete from t2 where a in (1,2,3,5,6,7,8,9,10,11,12);
set disable_full_table_scan_in_delete = off;
explain delete from t2 where a in (1,2,3,5,6,7,8,9,10,11,12);
begin;
--error ER_LOCK_WAIT_TIMEOUT
delete from t2 where a in (1,2,3,5,6,7,8,9,10,11,12);
set disable_full_table_scan_in_delete = on;
delete from t2 where a in (1,2,3,5,6,7,8,9,10,11,12);
commit;

connection conn1;
commit;
use delete_disable_full_table_scan_in_delete;
truncate t2;
insert into t2 (b,c) values (2,1),(1,2),(3,3),(5,3),(6,2),(7,2);

--echo ##
--echo ## Test 5 Use unique key
--echo ##

analyze table t2;

begin;
select * from t2 where b=2 for update;

connection conn2;
use delete_disable_full_table_scan_in_delete;
set disable_full_table_scan_in_delete = on;
explain delete from t2 where b in (1,3,4,5,6,7,8,9,10,11,12);
set disable_full_table_scan_in_delete = off;
explain delete from t2 where b in (1,3,4,5,6,7,8,9,10,11,12);
begin;
--error ER_LOCK_WAIT_TIMEOUT
delete from t2 where b in (1,3,4,5,6,7,8,9,10,11,12);
set disable_full_table_scan_in_delete = on;
delete from t2 where b in (1,3,4,5,6,7,8,9,10,11,12);
commit;

connection conn1;
commit;
use delete_disable_full_table_scan_in_delete;
truncate t2;
insert into t2 (b,c) values (2,1),(1,2),(3,3),(5,3),(6,2),(7,2);

--echo ##
--echo ## Test 6 Use Functional Key Parts
--echo ##

analyze table t2;
begin;
select * from t2 where (b+c)=8 for update;

connection conn2;
use delete_disable_full_table_scan_in_delete;
set disable_full_table_scan_in_delete = on;
explain delete from t2 where (b+c) in (1,2,3,4,5,6,7,9,10,11);
set disable_full_table_scan_in_delete = off;
explain delete from t2 where (b+c) in (1,2,3,4,5,6,7,9,10,11);
begin;
--error ER_LOCK_WAIT_TIMEOUT
delete from t2 where (b+c) in (1,2,3,4,5,6,7,9,10,11);
set disable_full_table_scan_in_delete = on;
delete from t2 where (b+c) in (1,2,3,4,5,6,7,9,10,11);
commit;

connection conn1;
commit;
use delete_disable_full_table_scan_in_delete;
truncate t2;
insert into t2 (b,c) values (2,1),(1,2),(3,3),(5,3),(6,2),(7,2);

--echo ##
--echo ## Test 7 Use Prefix Key
--echo ##
create table t3 (a int primary key, b varchar(200), index b (b(3)));
insert into t3 values (1,'aaarewg'),(2,'aaawwgw'),(3,'aacefg'),(4,'abcwgg'),(5,'qqfvav'),(6,'abasss'),(7,'ewgfge');
begin;
select * from t3 where b like "aa%" for update;

connection conn2;
begin;
set disable_full_table_scan_in_delete = on;
explain delete from t3 where b in ('abcwgg','qqfvav','ewgfge','fewf','eswfeww','ewgggg','yjudt');
set disable_full_table_scan_in_delete = off;
explain delete from t3 where b in ('abcwgg','qqfvav','ewgfge','fewf','eswfeww','ewgggg','yjudt');
--error ER_LOCK_WAIT_TIMEOUT
delete from t3 where b in ('abcwgg','qqfvav','ewgfge','fewf','eswfeww','ewgggg','yjudt');
set disable_full_table_scan_in_delete = on;
delete from t3 where b in ('abcwgg','qqfvav','ewgfge','fewf','eswfeww','ewgggg','yjudt');
commit;

connection conn1;
commit;

--echo ##
--echo ## Test 8 TEST PREPARE
--echo ##
use delete_disable_full_table_scan_in_delete;
begin;
select * from t1 where a=4 for update;

connection conn2;
use delete_disable_full_table_scan_in_delete;

PREPARE stmt1 FROM 'delete from t1 where a in (1,2,3,5,6,7,8,9,10,11,12)';

set disable_full_table_scan_in_delete = off;
--error ER_LOCK_WAIT_TIMEOUT
execute stmt1;
set disable_full_table_scan_in_delete = on;
execute stmt1;

connection conn1;
commit;

--echo ##
--echo ## Test 9 TEST use table scan when no range scan is available
--echo ##
set disable_full_table_scan_in_delete = true;

explain delete from t1;
# t1 has primary key a and composite key bc (c,b)
# Condition 'where b in (...)' cannot generate a range scan
explain delete from t1 where b in (1,2,3,5,6,7,8,9,10,11,12);

connection default;
SET @@global.lock_wait_timeout=@old_lock_wait_timeout;
SET @@global.innodb_lock_wait_timeout=@old_innodb_lock_wait_timeout;

drop database delete_disable_full_table_scan_in_delete;

set disable_full_table_scan_in_delete = @old_disable_full_table_scan_in_delete;

--echo #########################################################
--echo #Test: sysvar: disable_full_table_scan_in_delete
--echo #########################################################
show variables like "disable_full_table_scan_in_delete";

set disable_full_table_scan_in_delete = on;
show variables like "disable_full_table_scan_in_delete";
set disable_full_table_scan_in_delete = off;
show variables like "disable_full_table_scan_in_delete";

set disable_full_table_scan_in_delete = ON;
show variables like "disable_full_table_scan_in_delete";
set disable_full_table_scan_in_delete = OFF;
show variables like "disable_full_table_scan_in_delete";

set disable_full_table_scan_in_delete = true;
show variables like "disable_full_table_scan_in_delete";
set disable_full_table_scan_in_delete = false;
show variables like "disable_full_table_scan_in_delete";

set disable_full_table_scan_in_delete = 1;
show variables like "disable_full_table_scan_in_delete";
set disable_full_table_scan_in_delete = 0;
show variables like "disable_full_table_scan_in_delete";

set session disable_full_table_scan_in_delete = on;
show variables like "disable_full_table_scan_in_delete";
set session disable_full_table_scan_in_delete = off;
show variables like "disable_full_table_scan_in_delete";

set global disable_full_table_scan_in_delete = on;
show variables like "disable_full_table_scan_in_delete";

set global disable_full_table_scan_in_delete = off;
show variables like "disable_full_table_scan_in_delete";

--echo --> connection conn1
connection conn1;
set global disable_full_table_scan_in_delete = TRUE;
show variables like "disable_full_table_scan_in_delete";

--echo --> connection conn2
connection conn2;
show variables like "disable_full_table_scan_in_delete";

--echo --> connection conn1
connection conn1;
set global disable_full_table_scan_in_delete = FALSE;
show variables like "disable_full_table_scan_in_delete";

--echo --> connection conn2
connection conn2;
show variables like "disable_full_table_scan_in_delete";

--echo --> disconnection conn1
disconnect conn1;
--echo --> disconnection conn2
disconnect conn2;

connection default;
set global disable_full_table_scan_in_delete = @old_disable_full_table_scan_in_delete;
